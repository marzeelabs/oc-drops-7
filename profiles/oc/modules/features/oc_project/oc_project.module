<?php
/**
 * @file
 * Code for the OC Project feature.
 */

include_once('oc_project.features.inc');

/**
 * Implementation of hook_menu().
 */
function oc_project_menu() {
  $items = array();

  $items['admin/workbench/content/projects/add'] = array(
    'title' => 'Add project',
    'type' => MENU_LOCAL_ACTION,
    'page callback' => 'drupal_goto',
    'page arguments' => array('node/add/project', array('query' => array('destination' => 'admin/workbench/content/projects'))),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implementation of template_preprocess_field().
 */
function oc_project_preprocess_field(&$variables) {

  // // field_project_status
  // if ($variables['element']['#field_name'] == 'field_project_status' && in_array($variables['element']['#view_mode'], array('teaser', 'full'))) {
  //
  //   if (isset($variables['element']['#object']->field_project_status[$variables['element']['#object']->language])) {
  //     // adds the class to display the icon
  //     // $variables['classes_array'][] = $variables['element']['#object']->field_project_status[$variables['element']['#object']->language][0]['value'];
  //
  //     // adds the link to apply to open projects
  //     if (isset($variables['element']['#object']) &&
  //         $variables['element']['#object']->field_project_status[$variables['element']['#object']->language][0]['value'] == 'open') {
  //       foreach ($variables['items'] as $key => $item) {
  //         $variables['items'][$key]['#markup'] = l($item['#markup'], 'node/'. variable_get('oc_project_apply_weform_nid', 10), array('query' => array('project' => $variables['element']['#object']->nid)));
  //       }
  //     }
  //   }
  // }

  // field_project_host
  if ($variables['element']['#field_name'] == 'field_project_host' && $variables['element']['#view_mode'] == 'teaser') {

    if (isset($variables['element']['#object']->field_project_host[$variables['element']['#object']->language][0]['entity'])) {
      $host = $variables['element']['#object']->field_project_host[$variables['element']['#object']->language][0]['entity'];

      // adds the default logo if not present
      if (!sizeof($host->field_partner_logo)) {
        $variables['classes_array'][] = 'empty-host-logo';

        // // and adds the link to the referenced partner institution
        // foreach (array_keys($variables['items']) as $key) {
        //   $variables['items'][$key]['#markup'] = l($host->title, 'node/'. $host->nid);
        // }
      }
    }
  }

  // field_project_period
  if ($variables['element']['#field_name'] == 'field_project_period' && in_array($variables['element']['#view_mode'], array('teaser', 'search', 'map', 'full'))) {

    // this bit does the "progress bar" for the project duration (1 span per month)
    foreach (array_keys($variables['items']) as $key) {
      $period = $variables['items'][$key]['#markup'];
      preg_match('/(\d\d\d\d)-(\d\d).* to (\d\d\d\d)-(\d\d).*/', $period, $matches);
      if (isset($matches[4])) {
        $from_y = $matches[1];
        $from_m = $matches[2];
        $to_y = $matches[3];
        $to_m = $matches[4];
        $months = ($to_y - $from_y) * 12 + $to_m - $from_m;
        $bar = str_repeat('<span class="month"></span>', $months);
        $from = date('F Y', strtotime($from_y .'-'. $from_m));
        $to = date('F Y', strtotime($to_y .'-'. $to_m));
        $variables['items'][$key]['#markup'] = <<<PERIOD
          <span class="project-period-from">$from</span>
          <span class="project-period-no-bar"> - </span>
          <span class="project-period-bar">$bar</span>
          <span class="project-period-to">$to</span>
PERIOD;
      }
    }
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @todo Reimplement the full editorial flow for partners of the project later. This functionality
 * is deprecated for now. See https://trello.com/c/odViWkpY
 */
// function oc_project_form_project_node_form_alter(&$form, &$form_state, $form_id) {
//   global $user;
//
//     // if the user is not an "editor", we need to check if he is supervisor of the project
//   if (!in_array(3, array_keys($user->roles))) {
//     $has_access = 0;
//
//     foreach ($form['#node']->field_project_supervisor[$form['#node']->language] as $supervisor) {
//       if ($supervisor['target_id'] == $user->uid) {
//         $has_access = 1;
//         break;
//       }
//     }
//
//     if (!$has_access) {
//       drupal_access_denied();
//     }
//   }
// }

/**
 * Implements hook_migrate_api().
 */
function oc_project_migrate_api() {
  $api = array(
    'api' => 2,
    'migrations' => array(
      'OCProjects' => array('class_name' => 'OCProjectsMigration'),
    ),
  );
  return $api;
}
